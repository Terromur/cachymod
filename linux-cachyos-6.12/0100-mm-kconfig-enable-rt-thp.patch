diff -uar a/mm/compaction.c b/mm/compaction.c
--- a/mm/compaction.c
+++ b/mm/compaction.c
@@ -1920,11 +1920,7 @@
  * aggressively the kernel should compact memory in the
  * background. It takes values in the range [0, 100].
  */
-#ifdef CONFIG_CACHY
-static unsigned int __read_mostly sysctl_compaction_proactiveness;
-#else
-static unsigned int __read_mostly sysctl_compaction_proactiveness = 20;
-#endif
+static unsigned int __read_mostly sysctl_compaction_proactiveness = 40;
 static int sysctl_extfrag_threshold = 500;
 static int __read_mostly sysctl_compact_memory;
 
diff -uar a/mm/Kconfig b/mm/Kconfig
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -816,7 +815,7 @@
 
 menuconfig TRANSPARENT_HUGEPAGE
 	bool "Transparent Hugepage Support"
-	depends on HAVE_ARCH_TRANSPARENT_HUGEPAGE && !PREEMPT_RT
+	depends on HAVE_ARCH_TRANSPARENT_HUGEPAGE
 	select COMPACTION
 	select XARRAY_MULTI
 	help
diff -uar a/init/Kconfig b/init/Kconfig
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -915,7 +915,7 @@
 	bool "Memory placement aware NUMA scheduler"
 	depends on ARCH_SUPPORTS_NUMA_BALANCING
 	depends on !ARCH_WANT_NUMA_VARIABLE_LOCALITY
-	depends on SMP && NUMA && MIGRATION && !PREEMPT_RT
+	depends on SMP && NUMA && MIGRATION
 	help
 	  This option adds support for automatic NUMA aware memory/task placement.
 	  The mechanism is quite primitive and is based on migrating memory when

From c7488c6d40a33f74327229dcf8ea382880a3ba72 Mon Sep 17 00:00:00 2001
From: Vasiliy Stelmachenok <ventureo@yandex.ru>
Date: Tue, 31 Oct 2023 11:04:44 +0300
Subject: [PATCH 2/2] Don't make realtime patchset dependent on CONFIG_EXPERT

It's just a headache to have a bunch of garbage in your config for the
sake of enabling one option. It makes it much easier to keep our config
and maintain it relative to other cachy kernels.

Signed-off-by: Vasiliy Stelmachenok <ventureo@cachyos.org>
---
 kernel/Kconfig.preempt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/Kconfig.preempt b/kernel/Kconfig.preempt
index 0f3d4c2a41cb..337fcd54fc75 100644
--- a/kernel/Kconfig.preempt
+++ b/kernel/Kconfig.preempt
@@ -100,7 +100,7 @@ endchoice
 
 config PREEMPT_RT
 	bool "Fully Preemptible Kernel (Real-Time)"
-	depends on EXPERT && ARCH_SUPPORTS_RT
+	depends on ARCH_SUPPORTS_RT
 	select PREEMPTION
 	help
 	  This option turns the kernel into a real-time kernel by replacing
-- 
2.46.2

