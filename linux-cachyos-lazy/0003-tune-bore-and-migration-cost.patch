# Configure BORE to run efficiently with SCHED_AUTOGROUP enabled.
# Obey RUN_TO_PARITY instead, for better throughput.

# Increase sched migration cost.
# Migration cost kept at 500000, 2024-10-26.

diff -uarp a/kernel/sched/bore.c b/kernel/sched/bore.c
--- a/kernel/sched/bore.c
+++ b/kernel/sched/bore.c
@@ -12,7 +12,7 @@ u8   __read_mostly sched_bore
 u8   __read_mostly sched_burst_smoothness_long  = 1;
 u8   __read_mostly sched_burst_smoothness_short = 0;
 u8   __read_mostly sched_burst_fork_atavistic   = 2;
-u8   __read_mostly sched_burst_parity_threshold = 2;
+u8   __read_mostly sched_burst_parity_threshold = 0;
 u8   __read_mostly sched_burst_penalty_offset   = 24;
 uint __read_mostly sched_burst_penalty_scale    = 1280;
 uint __read_mostly sched_burst_cache_lifetime   = 60000000;
diff -uarp a/kernel/sched/fair.c b/kernel/sched/fair.c
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -90,7 +90,7 @@ unsigned int sysctl_sched_base_slice			=
 static unsigned int normalized_sysctl_sched_base_slice	= 750000ULL;
 #endif // CONFIG_SCHED_BORE
 
-const_debug unsigned int sysctl_sched_migration_cost	= 500000UL;
+const_debug unsigned int sysctl_sched_migration_cost	= 500000UL;
 
 static int __init setup_sched_thermal_decay_shift(char *str)
 {
